% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AlabasterParam.R, R/MsBackendMzR.R
\name{AlabasterParam}
\alias{AlabasterParam}
\alias{readObject}
\alias{saveObject,MsBackendMzR-method}
\alias{saveMsObject,MsBackendMzR,AlabasterParam-method}
\alias{readMsObject,MsBackendMzR,AlabasterParam-method}
\title{Store MS data objects using the alabaster framework}
\usage{
AlabasterParam(path = tempdir())

\S4method{saveObject}{MsBackendMzR}(x, path, ...)

\S4method{saveMsObject}{MsBackendMzR,AlabasterParam}(object, param)

\S4method{readMsObject}{MsBackendMzR,AlabasterParam}(object, param, spectraPath = character())
}
\arguments{
\item{path}{\code{character(1)} with the name of the directory where the MS data
object should be saved to or from which it should be restored.
Importantly, path should point to a \strong{new} folder, i.e. a directory
that \strong{does not already exist}.}

\item{x}{MS data object to export. Can be one of the supported classes
listed below.}

\item{...}{optional additional parameters passed to the downstream
functions, such as for example \code{spectraPath} described above.}

\item{object}{for \code{saveMsObject()}: the MS data object to save, for
\code{readMsObject()}: the MS data object that should be returned}

\item{param}{an object defining and (eventually configuring) the file format
and file name or directory to/from which the data object should be
exported/imported.}

\item{spectraPath}{For \code{readMsObject()}: \code{character(1)} optionally allowing
to define the (absolute) path where the spectra files (\emph{data storage
files}) can be found. This parameter is used for \code{MsBackendMzR} (see
descriptions below) and can be passed through \code{...} also to
\code{readMsObject()} functions for other classes (such as \code{Spectra},
\code{MsExperiment} etc).}
}
\value{
For \code{AlabasterParam()}: an instance of \code{AlabasterParam} class. For
\code{readObject()} the exported object in the specified path (depending on
the type of object defined in the \emph{OBJECT} file in the path. For
\code{readMsObject()} the exported data object, defined with the function's
first parameter, from the specified path. \code{saveObject()} and
\code{saveMsObject()} don't return anything.
}
\description{
The \href{https://github.com/ArtifactDB/alabaster.base}{\emph{alabaster} framework}
provides the methodology to save R objects to on-disk representations/
storage modes which are programming language independent (in contrast to
e.g. R's RDS files). By using standard file formats such as JSON and HDF5,
alabaster ensures that the data can also be read and imported by other
programming languages such as Python or Javascript. This improves
interoperability between application ecosystems.

The \emph{alabaster} package defines the \code{\link[=saveObject]{saveObject()}} and \code{\link[=readObject]{readObject()}}
methods. Implementations of these methods are available for the following
classes hence allowing to use \code{saveObject()} and \code{readObject()} directly on
these objects:
\itemize{
\item \code{MsBackendMzR}, defined in the
\href{https://bioconductor.org/packages/Spectra}{\emph{Spectra}} package.
}

In addition, the \emph{MsIO} package defines the \code{AlabasterParam} which can be
used to write or read MS objects using the \code{saveMsObject()} and
\code{readMsObject()} methods. This allows additional configurations and
customizations to the export or import process. It is thus for example
possible to specify the path to the original MS data files for \emph{on-disk} MS
representations such as the \code{MsBackendMzR} which enables to import a stored
object even if either the object or the original MS data files have been
moved to a different directory or file system.

Importantly, it is only possible to save \strong{one object in one directory}. To
overwrite an existing stored object in a folder, that folder has to be
deleted beforehand.

Details and properties for the \emph{alabaster}-based storage modes for the
various supported MS data objects are listed in the following sections.
}
\section{On-disk storage for \code{MsBackendMzR} objects}{


\code{MsBackendMzR} objects can be exported or imported using the
\code{saveMsObject()} or \code{readMsObject()} functions to and from \emph{alabaster}-based
storage modes using the \code{AlabasterParam} parameter object. Alternatively
\emph{alabaster}'s \code{saveObject()} and \code{readObject()} can be used. The parameter
\code{spectraPath} allows to define an alternative path to the original
data files (in case these were moved). This parameter can be passed as
additional parameter to both the \code{readObject()} as well as the
\code{readMsObject()} methods.

The format of the folder contents follows the \emph{alabaster} format: a file
\emph{OBJECT} (in JSON format) defines the type of object that was stored in the
directory while the object's data, for \code{MsBackendMzR}, is stored in
sub-folders \emph{peaks_variables} (a \code{character} with the names of the peaks
variables of the object) and \emph{spectra_data} (the metadata for all spectra).
Each sub-folder contains also an \emph{OBJECT} file defining the object's type
and an additional file (in HDF5 format) containing the data. See examples
below for details.
}

\examples{

## Export and import a `MsBackendMzR` object:

library(Spectra)
library(msdata)
fl <- system.file("TripleTOF-SWATH", "PestMix1_DDA.mzML", package = "msdata")
be <- backendInitialize(MsBackendMzR(), fl)
be

## Export the object to a temporary directory using the alabaster framework;
## the equivalent command using the parameter object would be
## `saveMsObject(be, AlabasterParam(d))`.
d <- file.path(tempdir(), "ms_backend_mzr_example")
saveObject(be, d)

## List the content of the folder
dir(d, recursive = TRUE)

## The data can be imported again using alabaster's readObject() function
be_in <- readObject(d)
be_in

## Alternatively, the data could be restored also using
be_in <- readMsObject(MsBackendMzR(), AlabasterParam(d))

all.equal(mz(be), mz(be_in))
}
\seealso{
Other MS object export and import formats.: 
\code{\link{PlainTextParam}}
}
\author{
Johannes Rainer, Philippine Louail
}
\concept{MS object export and import formats.}
